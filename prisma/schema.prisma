// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  email    String?
  password String

  sessions Session[]
}

model Player {
  id            Int     @id @default(autoincrement())
  rating        Int     @default(1200)
  birth_year    Int
  first_name    String
  last_name     String
  attendant     Boolean @default(false)
  white_matches Match[] @relation(name: "whiteG")
  black_matches Match[] @relation(name: "blackG")
  game          Game?   @relation(fields: [game_id], references: [id], onDelete: SetNull)
  game_id       Int?
}

model Match {
  round   Int
  match   Int
  white   Player? @relation(fields: [player1], references: [id], name: "whiteG")
  player1 Int?
  black   Player? @relation(fields: [player2], references: [id], name: "blackG")
  player2 Int?
  winner  Int?
  game    Game    @relation(fields: [game_id], references: [id], onDelete: Cascade)
  game_id Int

  @@id([round, match, game_id], name: "id")
}

model Game {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  rounds      Int
  players     Player[]
  matches     Match[]
}

model Session {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [user_id], references: [id])
  user_id       Int
  creation_date DateTime @default(now())
  token         String   @unique
}
